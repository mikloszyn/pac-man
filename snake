<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Snake Game</title>
    <style>
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background-color: #000;
            color: #fff;
            font-family: Arial, sans-serif;
        }
        #gameCanvas {
            background-color: #000;
            border: 1px solid #fff;
        }
    </style>
</head>
<body>
    <canvas id="gameCanvas" width="400" height="400"></canvas>

    <script>
        const canvas = document.getElementById('gameCanvas');
        const ctx = canvas.getContext('2d');

        const gridSize = 20;
        let snake = [{ x: 200, y: 200 }];
        let direction = 'right';
        let food = getRandomFoodPosition();

        function getRandomFoodPosition() {
            return {
                x: Math.floor(Math.random() * canvas.width / gridSize) * gridSize,
                y: Math.floor(Math.random() * canvas.height / gridSize) * gridSize
            };
        }

        function drawSnake() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            snake.forEach(segment => {
                ctx.fillStyle = 'lime';
                ctx.fillRect(segment.x, segment.y, gridSize, gridSize);
            });
        }

        function drawFood() {
            ctx.fillStyle = 'red';
            ctx.fillRect(food.x, food.y, gridSize, gridSize);
        }

        function moveSnake() {
            const head = { ...snake[0] };

            switch (direction) {
                case 'right':
                    head.x += gridSize;
                    break;
                case 'left':
                    head.x -= gridSize;
                    break;
                case 'up':
                    head.y -= gridSize;
                    break;
                case 'down':
                    head.y += gridSize;
                    break;
            }

            if (head.x === food.x && head.y === food.y) {
                food = getRandomFoodPosition();
            } else {
                snake.pop();
            }

            snake.unshift(head);

            if (head.x < 0 || head.x >= canvas.width || head.y < 0 || head.y >= canvas.height || isSnakeCollision(head)) {
                resetGame();
            }

            drawSnake();
            drawFood();
        }

        function isSnakeCollision(head) {
            return snake.some((segment, index) => index !== 0 && segment.x === head.x && segment.y === head.y);
        }

        function resetGame() {
            snake = [{ x: 200, y: 200 }];
            direction = 'right';
            food = getRandomFoodPosition();
        }

        document.addEventListener('keydown', function(event) {
            switch (event.key) {
                case 'ArrowUp':
                    if (direction !== 'down') direction = 'up';
                    break;
                case 'ArrowDown':
                    if (direction !== 'up') direction = 'down';
                    break;
                case 'ArrowLeft':
                    if (direction !== 'right') direction = 'left';
                    break;
                case 'ArrowRight':
                    if (direction !== 'left') direction = 'right';
                    break;
            }
        });

        function gameLoop() {
            moveSnake();
            requestAnimationFrame(gameLoop);
        }

        gameLoop();
    </script>
</body>
</html>
